<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Https on Ambiguous Implicits - Paul Lysak&#39;s blog about programming</title>
    <link>/tags/https/</link>
    <description>Recent content in Https on Ambiguous Implicits - Paul Lysak&#39;s blog about programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Sep 2013 22:32:00 +0300</lastBuildDate>
    
	<atom:link href="/tags/https/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTTPS client with Finagle: short reference</title>
      <link>/blog/2013-09-17-https-client-with-finagle-short/</link>
      <pubDate>Tue, 17 Sep 2013 22:32:00 +0300</pubDate>
      
      <guid>/blog/2013-09-17-https-client-with-finagle-short/</guid>
      <description>It wasn&#39;t obvious for me how to make HTTPS calls with Finagle so I&#39;d like to share key points here: When building client: explicitly specify correct port (typically 443 instead of 80)When building client: enable TLS using ClientBuilder.tls(...) or ClientBuilder.tlsWithoutValidation() methodWhen making actual call: specify HTTPS protocol in requested URLIn practice you&#39;ll get something like this: 
 val client = ClientBuilder()
.codec(Http())
.hosts(&#34;yourServer:443&#34;)
.tls(&#34;yourServer&#34;)
.build()
val httpRequest = RequestBuilder().url(&#34;https://yourServer/somePath&#34;).buildGet</description>
    </item>
    
  </channel>
</rss>