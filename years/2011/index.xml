<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2011 on Ambiguous Implicits - Paul Lysak&#39;s blog about programming</title>
    <link>https://paul-lysak.github.io/years/2011/</link>
    <description>Recent content in 2011 on Ambiguous Implicits - Paul Lysak&#39;s blog about programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Nov 2011 19:23:00 +0200</lastBuildDate>
    
	<atom:link href="https://paul-lysak.github.io/years/2011/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring WebFlow input patameters default values</title>
      <link>https://paul-lysak.github.io/posts/2011-11-11-spring-webflow-input-patameters-default/</link>
      <pubDate>Fri, 11 Nov 2011 19:23:00 +0200</pubDate>
      
      <guid>https://paul-lysak.github.io/posts/2011-11-11-spring-webflow-input-patameters-default/</guid>
      <description>Due to strange WebFlow behaviour (possibly a bug) it was impossible for me to use a constant as a default input value - I was constantly getting OgnlException. So, I used following workaround. Suppose you have such input parameter in your flow definition and you want &#39;true&#39; to be default value:

&amp;lt;input name=&#34;myFlag&#34; type=&#34;boolean&#34;/&amp;gt;

Then define some action state as initial state (&amp;lt;flow start-state=&#34;myFirstState&#34;&amp;gt;) and set default value there:</description>
    </item>
    
    <item>
      <title>Dependency management in JavaScript</title>
      <link>https://paul-lysak.github.io/posts/2011-10-25-dependency-management-in-javascript/</link>
      <pubDate>Tue, 25 Oct 2011 11:57:00 +0300</pubDate>
      
      <guid>https://paul-lysak.github.io/posts/2011-10-25-dependency-management-in-javascript/</guid>
      <description>Imagine web-application with lots of JavaScript code and CSS files which depend on each other. Each page needs specific JS and CSS files, but it&#39;s not always easy to say which exactly - pages are constructed from relatively independent parts.
Moreover, some content which needs JS may be loaded asynchronously.
So, I&#39;m goin to make some research about flexible ways of dependency management with JavaScript and blog about it.
RequireJS</description>
    </item>
    
  </channel>
</rss>