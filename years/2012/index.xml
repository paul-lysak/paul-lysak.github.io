<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2012 on Ambiguous Implicits - Paul Lysak&#39;s blog about programming</title>
    <link>http://www.aimplicits.com/years/2012/</link>
    <description>Recent content in 2012 on Ambiguous Implicits - Paul Lysak&#39;s blog about programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Dec 2012 16:43:00 +0200</lastBuildDate>
    
	<atom:link href="http://www.aimplicits.com/years/2012/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Looking for JavaScript grid/table component</title>
      <link>http://www.aimplicits.com/posts/2012-12-28-looking-for-javascript-gridtable/</link>
      <pubDate>Fri, 28 Dec 2012 16:43:00 +0200</pubDate>
      
      <guid>http://www.aimplicits.com/posts/2012-12-28-looking-for-javascript-gridtable/</guid>
      <description>Recently I was looking for grid/table component in Javascript which is would be open-source, flexible enough and not tied heavily to some large framework. I&#39;d like to share with you some brief notes of that research. I like SlickGrid more so I&#39;ve explored it more. SlickGridhttps://github.com/mleibman/SlickGrid/wikiLicense: MIT PROs: Supports huge datasets via virtual scrolling. Looks like it&#39;s the only grid that supports horizontal virtual scrolling. &amp;nbsp;Supports trees Data provider API - allows model creation.</description>
    </item>
    
    <item>
      <title>Antipatterns: initialization after usage</title>
      <link>http://www.aimplicits.com/posts/2012-12-19-antipatterns-initialization-after-usage/</link>
      <pubDate>Wed, 19 Dec 2012 19:19:00 +0200</pubDate>
      
      <guid>http://www.aimplicits.com/posts/2012-12-19-antipatterns-initialization-after-usage/</guid>
      <description>I&#39;ve seen such problem fiew times and I&#39;m going to describe it as an antipattern - let&#39;s call it &#34;initialization after usage&#34;. It could sound a bit like Captain Obvious, but isn&#39;t it typical for some pattern/antipattern catalogs? :)
The problem:There is an object which has some fields initialized in one place, some in completely different place, and in the meantime the object is used somewhere. So when using the object it&#39;s not clear if its fields are completely initialized or not.</description>
    </item>
    
    <item>
      <title>A good question for quiz about generics In Java </title>
      <link>http://www.aimplicits.com/posts/2012-09-18-a-good-question-for-quiz-about-generics/</link>
      <pubDate>Tue, 18 Sep 2012 19:40:00 +0300</pubDate>
      
      <guid>http://www.aimplicits.com/posts/2012-09-18-a-good-question-for-quiz-about-generics/</guid>
      <description>Suppose you have two classes: 
public class Foo {
private String[] array = (String[]) new Object[];
public static void main() {
Foo f = new Foo();
}
}
public class Bar&amp;lt;T&amp;gt; {
private T[] array = (T[]) new T[];
public static void main() {
Bar b = new Bar&amp;lt;String&amp;gt;();
}
}
Will they compile? Will they run? At a first glance it may seem that both make inappropriate casting from superclass Object[] to subclass String[].</description>
    </item>
    
    <item>
      <title>Quoting password for user in Oracle database</title>
      <link>http://www.aimplicits.com/posts/2012-06-22-quoting-password-for-user-in-oracle/</link>
      <pubDate>Fri, 22 Jun 2012 12:21:00 +0300</pubDate>
      
      <guid>http://www.aimplicits.com/posts/2012-06-22-quoting-password-for-user-in-oracle/</guid>
      <description>Recently I needed to create a user in Oracle11g database and I was surprised that for other people following expression works well:

CREATE USER name IDENTIFIED BY password
But I&#39;m constantly getting ORA-00922: missing or invalid option error. Quoting the password solves the problem, so following expression works fine: 
CREATE USER name IDENTIFIED BY &#34;password&#34;
It turned out that for password which contain only digits or start with a letter quotes aren&#39;t needed, so first expression works fine.</description>
    </item>
    
    <item>
      <title>Collections.addAll performance</title>
      <link>http://www.aimplicits.com/posts/2012-06-13-collectionsaddall-performance/</link>
      <pubDate>Wed, 13 Jun 2012 13:08:00 +0300</pubDate>
      
      <guid>http://www.aimplicits.com/posts/2012-06-13-collectionsaddall-performance/</guid>
      <description>I was wondering how efficient addAll() method in Java collections is and looked through the JDK code (Sun/Oracle JDK 1.6.0-27). Here is code for ArrayList.addAll(...):

public boolean addAll(Collection&amp;lt;? extends E&amp;gt; c) {
Object[] a = c.toArray();
int numNew = a.length;
ensureCapacity(size + numNew); // Increments modCount
System.arraycopy(a, 0, elementData, size, numNew);
size += numNew;
return numNew != 0;
}

So here you can see incomming collection content copied into intermediate array.</description>
    </item>
    
    <item>
      <title>POST-Redirect-GET Pattern In Spring WebFlow</title>
      <link>http://www.aimplicits.com/posts/2012-05-04-post-redirect-get-pattern-in-spring/</link>
      <pubDate>Fri, 04 May 2012 11:52:00 +0300</pubDate>
      
      <guid>http://www.aimplicits.com/posts/2012-05-04-post-redirect-get-pattern-in-spring/</guid>
      <description>It&#39;s a good practice to redirect user to get requests after making some changes with post and this is
usually done by Spring WebFlow by default. But what if by some reason you need to use &amp;lt;webflow:always-redirect-on-pause value=&#34;false&#34;/&amp;gt; option?
You can do this through java code. This approach is not described in WebFlow reference but documented via API javadoc.
Suppose you have some Action which is configured through WebFlow. If you want to make redirect to GET after this action you can modify action methods in following way:</description>
    </item>
    
    <item>
      <title>Beware of SchedulerFactoryBean</title>
      <link>http://www.aimplicits.com/posts/2012-03-30-beware-of-schedulerfactorybean/</link>
      <pubDate>Fri, 30 Mar 2012 11:38:00 +0300</pubDate>
      
      <guid>http://www.aimplicits.com/posts/2012-03-30-beware-of-schedulerfactorybean/</guid>
      <description>Recently I&#39;ve discovered unpleasant side effect of org.springframework.scheduling.quartz.SchedulerFactoryBean which results to instable behaviour. It implements FactoryBean interface, so by default if you reference it in your context it returns Scheduler instance instead of the factory itself. But Scheduler instance creation is triggered by SchedulerFactoryBean.afterPropertiesSet(), and factory can&#39;t return Scheduler at all until it has been fully initialized.
See the point? Suppose we have some cyclic reference in the context and SchedulerFactoryBean relies on some other beans (for example, they may be needed for initial state configuration), and some of those other beans relies on scheduler in order to do some job later.</description>
    </item>
    
  </channel>
</rss>